
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/general/plot_05_datasets.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_general_plot_05_datasets.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_general_plot_05_datasets.py:


.. _ex-fnirs-datasets:

================
Example Datasets
================

To get you up and running with MNE-NIRS and fNIRS data analysis we provide
some example datasets.
Each dataset is published and if you use the data at any stage of
your experiment (including piloting and exploration) then please cite the
authors of the data.

A brief explanation of each dataset is provided below, and a demonstration
of how to download the data and address it with MNE.
Each dataset is provided in BIDs format, as such we can use the MNE-BIDS
package to quickly report the number of trials for each condition in the
dataset.

.. GENERATED FROM PYTHON SOURCE LINES 21-32

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 1

    # Authors: Robert Luke <mail@robertluke.net>
    #
    # License: BSD (3-clause)


    import mne_nirs
    import mne_bids.stats









.. GENERATED FROM PYTHON SOURCE LINES 33-45

*******************
Finger Tapping Data
*******************

This data is from the publication
:footcite:p:`Luke_fNIRS_Finger_Tapping_2021`.
This data provides an example of the canonical finger tapping experiment.
Data is provided from five participants. The experiment was a block design
with three conditions. The first condition consisted of the participants
tapping their thumb to fingers on the left hand, the second condition was the
same but with the right hand. The final condition was a control, with no
motor task.

.. GENERATED FROM PYTHON SOURCE LINES 45-50

.. code-block:: default


    datapath = mne_nirs.datasets.fnirs_motor_group.data_path()
    mne_bids.stats.count_events(datapath)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Using default location ~/mne_data for fnirs_motor_group...
      0%|                                              | 0.00/43.8M [00:00<?, ?B/s]      6%|██▏                                  | 2.65M/43.8M [00:00<00:01, 26.5MB/s]     14%|█████                                | 5.92M/43.8M [00:00<00:01, 30.1MB/s]     20%|███████▌                             | 8.93M/43.8M [00:00<00:01, 26.2MB/s]     28%|██████████▏                          | 12.1M/43.8M [00:00<00:01, 28.1MB/s]     34%|████████████▌                        | 14.9M/43.8M [00:00<00:01, 20.8MB/s]     41%|███████████████▎                     | 18.0M/43.8M [00:00<00:01, 22.0MB/s]     49%|██████████████████                   | 21.4M/43.8M [00:00<00:00, 25.0MB/s]     56%|████████████████████▋                | 24.4M/43.8M [00:00<00:00, 26.4MB/s]     63%|███████████████████████▏             | 27.4M/43.8M [00:01<00:00, 26.7MB/s]     70%|█████████████████████████▊           | 30.6M/43.8M [00:01<00:00, 28.1MB/s]     78%|████████████████████████████▉        | 34.2M/43.8M [00:01<00:00, 30.4MB/s]     85%|███████████████████████████████▌     | 37.3M/43.8M [00:01<00:00, 29.0MB/s]     92%|██████████████████████████████████   | 40.2M/43.8M [00:01<00:00, 28.6MB/s]     99%|████████████████████████████████████▍| 43.2M/43.8M [00:01<00:00, 24.1MB/s]      0%|                                              | 0.00/43.8M [00:00<?, ?B/s]    100%|█████████████████████████████████████| 43.8M/43.8M [00:00<00:00, 66.8GB/s]


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead tr th {
            text-align: left;
        }

        .dataframe thead tr:last-of-type th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr>
          <th></th>
          <th colspan="3" halign="left">tapping</th>
        </tr>
        <tr>
          <th>trial_type</th>
          <th>Control</th>
          <th>Tapping/Left</th>
          <th>Tapping/Right</th>
        </tr>
        <tr>
          <th>subject</th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>01</th>
          <td>30</td>
          <td>30</td>
          <td>30</td>
        </tr>
        <tr>
          <th>02</th>
          <td>30</td>
          <td>30</td>
          <td>30</td>
        </tr>
        <tr>
          <th>03</th>
          <td>30</td>
          <td>30</td>
          <td>30</td>
        </tr>
        <tr>
          <th>04</th>
          <td>30</td>
          <td>30</td>
          <td>30</td>
        </tr>
        <tr>
          <th>05</th>
          <td>30</td>
          <td>30</td>
          <td>30</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-62

*************************
Auditory Speech and Noise
*************************

This data is from the publication
:footcite:p:`luke2021analysis`.
In this experiment listeners were presented with auditory stimuli via insertphones.
Data is provided from seventeen participants. The experiment was a block
design with three conditions. The first condition consisted of speech,
the second condition consisted of low frequency noise.
The final condition was a control, no audio was presented to the listeners.

.. GENERATED FROM PYTHON SOURCE LINES 62-67

.. code-block:: default


    datapath = mne_nirs.datasets.block_speech_noise.data_path()
    mne_bids.stats.count_events(datapath)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Using default location ~/mne_data for block_speech_noise...
      0%|                                              | 0.00/57.5M [00:00<?, ?B/s]      0%|                                      | 64.5k/57.5M [00:00<02:33, 374kB/s]      0%|                                       | 157k/57.5M [00:00<01:33, 613kB/s]      0%|▏                                      | 251k/57.5M [00:00<01:18, 733kB/s]      1%|▎                                      | 394k/57.5M [00:00<00:58, 979kB/s]      1%|▍                                     | 666k/57.5M [00:00<00:36, 1.56MB/s]      2%|▋                                    | 1.06M/57.5M [00:00<00:24, 2.33MB/s]      3%|█                                    | 1.75M/57.5M [00:00<00:14, 3.76MB/s]      5%|█▊                                   | 2.83M/57.5M [00:00<00:09, 5.96MB/s]      8%|██▉                                  | 4.62M/57.5M [00:00<00:05, 9.62MB/s]     12%|████▌                                | 7.10M/57.5M [00:01<00:03, 14.3MB/s]     18%|██████▌                              | 10.3M/57.5M [00:01<00:02, 19.6MB/s]     23%|████████▌                            | 13.3M/57.5M [00:01<00:01, 22.8MB/s]     28%|██████████▌                          | 16.4M/57.5M [00:01<00:01, 25.1MB/s]     33%|████████████▎                        | 19.1M/57.5M [00:01<00:01, 25.6MB/s]     38%|██████████████▏                      | 22.1M/57.5M [00:01<00:01, 27.0MB/s]     44%|████████████████▏                    | 25.1M/57.5M [00:01<00:01, 28.1MB/s]     49%|█████████████████▉                   | 28.0M/57.5M [00:01<00:01, 28.0MB/s]     54%|███████████████████▊                 | 30.8M/57.5M [00:01<00:00, 28.0MB/s]     59%|█████████████████████▊               | 34.0M/57.5M [00:01<00:00, 29.1MB/s]     64%|███████████████████████▋             | 36.9M/57.5M [00:02<00:00, 28.6MB/s]     69%|█████████████████████████▌           | 39.8M/57.5M [00:02<00:00, 28.8MB/s]     75%|███████████████████████████▌         | 42.8M/57.5M [00:02<00:00, 29.2MB/s]     80%|█████████████████████████████▌       | 46.0M/57.5M [00:02<00:00, 29.9MB/s]     85%|███████████████████████████████▌     | 49.0M/57.5M [00:02<00:00, 29.0MB/s]     90%|█████████████████████████████████▍   | 51.9M/57.5M [00:02<00:00, 28.8MB/s]     96%|███████████████████████████████████▍ | 55.0M/57.5M [00:02<00:00, 29.2MB/s]      0%|                                              | 0.00/57.5M [00:00<?, ?B/s]    100%|█████████████████████████████████████| 57.5M/57.5M [00:00<00:00, 79.0GB/s]


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead tr th {
            text-align: left;
        }

        .dataframe thead tr:last-of-type th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr>
          <th></th>
          <th></th>
          <th colspan="3" halign="left">AudioSpeechNoise</th>
        </tr>
        <tr>
          <th></th>
          <th>trial_type</th>
          <th>Control</th>
          <th>Noise</th>
          <th>Speech</th>
        </tr>
        <tr>
          <th>subject</th>
          <th>session</th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>01</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>02</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>03</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>04</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>05</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>06</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>07</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>08</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>09</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>10</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>11</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>12</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>13</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>14</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>15</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>16</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
        <tr>
          <th>17</th>
          <th>01</th>
          <td>20</td>
          <td>20</td>
          <td>20</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 68-79

**********************
Audio or Visual Speech
**********************

This data is from the publication
:footcite:p:`shader2021use`.
In this experiment participants were presented a continuously running story
in blocked segments. Each segment was presented as either audio only
or visual only.
In addition to the audio visual stimuli, a control condition was also
presented randomly throughout the experiment.

.. GENERATED FROM PYTHON SOURCE LINES 79-84

.. code-block:: default


    datapath = mne_nirs.datasets.audio_or_visual_speech.data_path()
    mne_bids.stats.count_events(datapath)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Using default location ~/mne_data for audio_or_visual_speech...
      0%|                                              | 0.00/47.0M [00:00<?, ?B/s]      0%|                                      | 25.6k/47.0M [00:00<04:03, 193kB/s]      0%|                                      | 55.3k/47.0M [00:00<03:11, 245kB/s]      0%|                                      | 97.3k/47.0M [00:00<02:36, 300kB/s]      0%|▏                                      | 164k/47.0M [00:00<01:50, 423kB/s]      1%|▏                                      | 274k/47.0M [00:00<01:11, 652kB/s]      1%|▎                                     | 451k/47.0M [00:00<00:46, 1.01MB/s]      2%|▌                                     | 737k/47.0M [00:00<00:29, 1.59MB/s]      3%|▉                                    | 1.22M/47.0M [00:00<00:17, 2.58MB/s]      4%|█▌                                   | 2.00M/47.0M [00:00<00:10, 4.18MB/s]      7%|██▌                                  | 3.26M/47.0M [00:01<00:06, 6.73MB/s]     11%|████▏                                | 5.33M/47.0M [00:01<00:03, 11.0MB/s]     17%|██████▍                              | 8.17M/47.0M [00:01<00:02, 16.2MB/s]     23%|████████▌                            | 10.9M/47.0M [00:01<00:01, 19.5MB/s]     29%|██████████▌                          | 13.4M/47.0M [00:01<00:01, 21.3MB/s]     35%|████████████▊                        | 16.2M/47.0M [00:01<00:01, 23.1MB/s]     41%|███████████████                      | 19.2M/47.0M [00:01<00:01, 25.0MB/s]     46%|█████████████████                    | 21.7M/47.0M [00:01<00:01, 24.8MB/s]     52%|███████████████████▏                 | 24.3M/47.0M [00:01<00:00, 25.4MB/s]     58%|█████████████████████▌               | 27.4M/47.0M [00:01<00:00, 26.3MB/s]     64%|███████████████████████▋             | 30.1M/47.0M [00:02<00:00, 26.6MB/s]     70%|█████████████████████████▊           | 32.7M/47.0M [00:02<00:00, 26.4MB/s]     76%|███████████████████████████▉         | 35.5M/47.0M [00:02<00:00, 26.6MB/s]     82%|██████████████████████████████▏      | 38.4M/47.0M [00:02<00:00, 27.4MB/s]     88%|████████████████████████████████▍    | 41.2M/47.0M [00:02<00:00, 26.6MB/s]     93%|██████████████████████████████████▌  | 43.9M/47.0M [00:02<00:00, 26.7MB/s]     99%|████████████████████████████████████▋| 46.7M/47.0M [00:02<00:00, 27.0MB/s]      0%|                                              | 0.00/47.0M [00:00<?, ?B/s]    100%|█████████████████████████████████████| 47.0M/47.0M [00:00<00:00, 61.9GB/s]


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead tr th {
            text-align: left;
        }

        .dataframe thead tr:last-of-type th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr>
          <th></th>
          <th></th>
          <th colspan="3" halign="left">AudioVisualBroadVsRestricted</th>
        </tr>
        <tr>
          <th></th>
          <th>trial_type</th>
          <th>Audio</th>
          <th>Control</th>
          <th>Video</th>
        </tr>
        <tr>
          <th>subject</th>
          <th>session</th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>01</th>
          <th>01</th>
          <td>18</td>
          <td>10</td>
          <td>18</td>
        </tr>
        <tr>
          <th>02</th>
          <th>01</th>
          <td>18</td>
          <td>10</td>
          <td>18</td>
        </tr>
        <tr>
          <th>03</th>
          <th>01</th>
          <td>18</td>
          <td>10</td>
          <td>18</td>
        </tr>
        <tr>
          <th>04</th>
          <th>01</th>
          <td>18</td>
          <td>10</td>
          <td>18</td>
        </tr>
        <tr>
          <th>05</th>
          <th>01</th>
          <td>18</td>
          <td>10</td>
          <td>18</td>
        </tr>
        <tr>
          <th>06</th>
          <th>01</th>
          <td>18</td>
          <td>10</td>
          <td>18</td>
        </tr>
        <tr>
          <th>07</th>
          <th>01</th>
          <td>18</td>
          <td>10</td>
          <td>18</td>
        </tr>
        <tr>
          <th>08</th>
          <th>01</th>
          <td>18</td>
          <td>10</td>
          <td>18</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-89

Bibliography
-----------------------------------------------

.. footbibliography::


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  15.999 seconds)

**Estimated memory usage:**  10 MB


.. _sphx_glr_download_auto_examples_general_plot_05_datasets.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/mne-tools/mne-nirs/gh-pages?filepath=notebooks/auto_examples/general/plot_05_datasets.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_05_datasets.py <plot_05_datasets.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_05_datasets.ipynb <plot_05_datasets.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
